version: '3.5'

services:
  nifi:
    image: apache/nifi:${IMAGE_TAG:-latest}
    hostname: apache-nifi
    environment:
      - NIFI_LOG_DIR
      - NIFI_HOME
    networks:
      - traefik-net
      - kafka-net
    volumes:
      - nifi-log-vol:${NIFI_LOG_DIR}
      - nifi-conf-vol:${NIFI_HOME}/conf
      - nifi-database-vol:${NIFI_HOME}/database_repository
      - nifi-flowfile-vol:${NIFI_HOME}/flowfile_repository
      - nifi-content-vol:${NIFI_HOME}/content_repository
      - nifi-provenance-vol:${NIFI_HOME}/provenance_repository
      - nifi-state-vol:${NIFI_HOME}/state
    healthcheck:
      test: curl --silent http://apache-nifi:${PORT}
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5m
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.frontend.auth.basic.users: ${UI_AUTH}
        traefik.frontend.rule: Host:nifi.${PUBLIC_HOSTNAME}
        traefik.frontend.headers.customRequestHeaders: "X-ProxyScheme:http||X-ProxyHost:nifi.${PUBLIC_HOSTNAME}"
        traefik.frontend.headers.customResponseHeaders: "Access-Control-Allow-Origin: nifi.${PUBLIC_HOSTNAME}"
        traefik.backend: nifi
        traefik.port: "${PORT}"
      restart_policy:
        delay: 30s
        window: 2m
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          memory: 820M

networks:
  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    external: true

  kafka-net:
    name: ${KAFKA_NET_NAME:-kafka-net}
    external: true

volumes:
  nifi-log-vol:
    name: ${NIFI_LOG_VOL_NAME:-nifi-log-vol}
  nifi-conf-vol:
    name: ${NIFI_CONF_VOL_NAME:-nifi-conf-vol}
  nifi-database-vol:
    name: ${NIFI_DATABASE_VOL_NAME:-nifi-database-vol}
  nifi-flowfile-vol:
    name: ${NIFI_FLOWFILE_VOL_NAME:-nifi-flowfile-vol}
  nifi-content-vol:
    name: ${NIFI_CONTENT_VOL_NAME:-nifi-content-vol}
  nifi-provenance-vol:
    name: ${NIFI_PROVENANCE_VOL_NAME:-nifi-provenance-vol}
  nifi-state-vol:
    name: ${NIFI_STATE_VOL_NAME:-nifi-state-vol}
